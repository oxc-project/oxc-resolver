name: Release Plz

permissions: {}

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-plz:
    name: Release-plz
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0
          token: ${{ secrets.OXC_BOT_PAT }}
          persist-credentials: true # required by release-plz

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            src:
              - 'Cargo.toml'
              - '**/Cargo.toml'
              - '.github/workflows/release.yml'

      - uses: rust-lang/crates-io-auth-action@e919bc7605cde86df457cf5b93c5e103838bd879 # v1.0.1
        if: steps.changes.outputs.src == 'true'
        id: auth

      - uses: release-plz/action@f9715bc3b46e211f764f4440a221ddb89ae8abb3 # v0.5.112
        id: release-plz
        env:
          GITHUB_TOKEN: ${{ secrets.OXC_BOT_PAT }}
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}

      - name: Bump package.json
        if: ${{ steps.release-plz.outputs.prs_created }}
        env:
          GH_TOKEN: ${{ secrets.OXC_BOT_PAT }}
          PR_NUMBER: ${{ fromJSON(steps.release-plz.outputs.pr).number }}
          VERSION: ${{ fromJSON(steps.release-plz.outputs.pr).releases[0].version }}
        run: |
          set -e

          pr_number="${PR_NUMBER}"

          if [[ -n "$pr_number" ]]; then
            version="${VERSION}"

            jq --arg version "${version}" '.version = ($version) | .scripts.postinstall = "napi-postinstall oxc-resolver \($version) check"' package.json > tmp
            mv tmp package.json

            gh pr checkout $pr_number
            git add .
            git commit --amend --no-edit
            git push --force-with-lease
          fi
