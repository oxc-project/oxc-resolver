name: Release Plz

permissions: {}

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-plz:
    name: Release-plz
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.OXC_BOT_PAT }}
          persist-credentials: true # required by release-plz

      - uses: oxc-project/release-plz-action@12ee013e577af39a0b75f282e04064658afca86e # v1.0.1
        id: release-plz
        env:
          GITHUB_TOKEN: ${{ secrets.OXC_BOT_PAT }}

      - uses: oxc-project/setup-rust@d286d43bc1f606abbd98096666ff8be68c8d5f57 # v1.0.2
        with:
          cache-key: warm

      - uses: ./.github/actions/pnpm

      - name: Bump package.json
        if: ${{ steps.release-plz.outputs.prs_created }}
        env:
          GH_TOKEN: ${{ secrets.OXC_BOT_PAT }}
          PR_NUMBER: ${{ fromJSON(steps.release-plz.outputs.pr).number }}
          VERSION: ${{ fromJSON(steps.release-plz.outputs.pr).releases[0].version }}
        run: |
          set -e

          pr_number="${PR_NUMBER}"

          if [[ -n "$pr_number" ]]; then
            version="${VERSION}"

            jq --arg version "${version}" '.version = ($version) | .scripts.postinstall = "napi-postinstall oxc-resolver \($version) check"' package.json > tmp
            mv tmp package.json
            pnpm build

            gh pr checkout $pr_number
            git add .
            git commit --amend --no-edit
            git push --force-with-lease
          fi
