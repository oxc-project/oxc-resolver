name: CI

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - "**/*.md"
      - "!.github/workflows/ci.yml"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "!.github/workflows/ci.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: oxc-project/setup-rust@v1.0.0
        with:
          components: clippy rust-docs
      - run: cargo clippy --all-features --all-targets -- -D warnings
      - run: RUSTDOCFLAGS='-D warnings' cargo doc --no-deps --all-features
      - uses: crate-ci/typos@v1
        with:
          files: .

  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: oxc-project/setup-rust@v1.0.0
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: warm
      - uses: ./.github/actions/pnpm
      - run: cargo check --all-features --locked
      - run: cargo test --doc
      - run: cargo test --all-features
      - run: pnpm run build:debug && pnpm run test
        if: ${{ matrix.os  != 'windows-latest' }}

  wasm:
    name: Check Wasm
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1

      - uses: oxc-project/setup-rust@v1.0.0
        with:
          cache-key: wasm
          save-cache: ${{ github.ref_name == 'main' }}

      - name: Check
        run: |
          rustup target add wasm32-unknown-unknown
          cargo check --all-features --target wasm32-unknown-unknown

  wasi:
    name: Test wasi target
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1

      - uses: oxc-project/setup-rust@v1.0.0
        with:
          cache-key: wasi
          save-cache: ${{ github.ref_name == 'main' }}

      - uses: ./.github/actions/pnpm

      - name: Build
        run: |
          rustup target add wasm32-wasip1-threads
          pnpm build --target wasm32-wasip1-threads

      - name: Test
        run: pnpm run test
        env:
          WASI_TEST: 1
